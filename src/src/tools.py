from strands import tool
import os, json, smtplib, datetime
from email.message import EmailMessage
from fpdf import FPDF

@tool
def read_json(file_name):
    with open(file_name, 'r') as file:
        return str(json.load(file))

@tool
def show_files():
    return str([f for f in os.listdir(r"C:\Users\zuv33\OneDrive\سطح المكتب\CENTRAL GARD")])

@tool
def send_email_report(receiver_email, pdf_file_path):
    msg = EmailMessage()
    msg["Subject"] = "SOC Alert - Ransomware Report"
    msg["From"] = "mariammahmad907@gmail.com"
    msg["To"] = receiver_email
    msg.set_content("Attached is the latest threat report generated by Sentinel Guard AI.")
    with open(pdf_file_path, "rb") as f:
        msg.add_attachment(f.read(), maintype="application", subtype="pdf", filename="Ransomware_Report.pdf")
    with smtplib.SMTP_SSL("smtp.gmail.com", 465) as smtp:
        smtp.login("mariammahmad907@gmail.com", "twndvogardgsjfam")
        smtp.send_message(msg)

@tool
def analyze_and_generate_pdf(file_name: str) -> str:
    with open(file_name, 'r') as f:
        logs = json.load(f)
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.set_font("Arial", "B", 14)
    pdf.cell(200, 10, txt="SOC Threat Analysis Report", ln=True, align='C')
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, txt=f"Date: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", ln=True)
    pdf.ln(10)

    pdf.set_font("Arial", "B", 12)
    pdf.cell(200, 10, txt="Executive Summary", ln=True)
    pdf.set_font("Arial", size=12)
    pdf.multi_cell(0, 10, txt="Multiple high-severity indicators suggest a coordinated ransomware attack...")
    pdf.ln(5)

    pdf.set_font("Arial", "B", 12)
    pdf.cell(200, 10, txt="Detected Threats", ln=True)
    pdf.set_font("Arial", size=12)
    for entry in logs:
        pdf.multi_cell(0, 10, txt=f"""
- Time: {entry.get('time')}
- Threat Type: {entry.get('threat_signature')}
- Severity: {entry.get('severity')}
- Event Description: {entry.get('event')}
- Attacker IP: {entry.get('src_ip')}
- Victim IP: {entry.get('dest_ip')}
- Protocol: {entry.get('protocol')}
""")
        pdf.ln(2)

    pdf.set_font("Arial", "B", 12)
    pdf.cell(200, 10, txt="Recommendations", ln=True)
    pdf.set_font("Arial", size=12)
    pdf.multi_cell(0, 10, txt="""- Immediately isolate host 192.168.10.25
- Block IPs: 185.225.69.2, 94.130.50.200
- Revert encrypted files from latest backups
- Deploy endpoint monitoring rules (YARA/Sigma)
- Conduct a full IOC scan across the network""")

    output_path = "ransomware_report.pdf"
    pdf.output(output_path)
    return output_path
